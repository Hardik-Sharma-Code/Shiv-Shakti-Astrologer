@model Shiv_Shakti_Astro.VM.CustomerVM

@{
    <div class="row">
        <div class="col-md-3">

            <div class="collapsible-box">
                <div class="box-header" onclick="toggleBoxContent()">
                    Age
                    <span class="icon" id="toggleIcon">-</span>
                </div>
                <div class="box-content">
                    @using (Html.BeginForm("GetCustomer", "Customer", FormMethod.Get))
                    {
                        <label class="form-check-label" id="clearfilter">Clear</label>
                        <div class="form-check form-check-inline">
                            @Html.RadioButtonFor(model => model.SelectedAge, "18-24", new { @class = "form-check-input fltages", id = "age_18_24", name = "ages" })
                            <label class="form-check-label" for="age_18_24">18-24</label>
                        </div>
                        <br />
                        <div class="form-check form-check-inline">
                            @Html.RadioButtonFor(model => model.SelectedAge, "25-40", new { @class = "form-check-input fltages", id = "age_25_40", name = "ages" })
                            <label class="form-check-label" for="age_25_40">25-40</label>
                        </div>
                        <br />
                        <div class="form-check form-check-inline">
                            @Html.RadioButtonFor(model => model.SelectedAge, "40", new { @class = "form-check-input fltages", id = "age_above_40", name = "ages" })
                            <label class="form-check-label" for="age_above_40">Above 40</label>
                        </div>
                        <input type="hidden" id="searchname" name="SearchName" />
                        <button type="submit" class="btn btn-primary" id="applyFilterBtn" style="display:none">Apply Filter</button>
                    }


                </div>
            </div>

        </div>
        <div class="col-md-9">
            <div class="row">
                <div class="col">
                    <button class="btn btn-outline-secondary btnColor txtcolor" type="button" data-bs-toggle="modal" data-bs-target="#addModal">Add Customer</button>
                </div>
                <div class="col">
                    <div class="input-group mb-3 searchtxt m-right">
                        <input type="text" class="form-control txtcolor" id="txtsearch" placeholder="search name" aria-describedby="button-addon2" value="@(!string.IsNullOrEmpty(Model.SearchName) ? Model.SearchName : string.Empty)">
                        <button class="btn btn-outline-secondary btnColor txtcolor" type="button" id="btnsearch">Search</button>
                    </div>
                </div>
            </div>
            @{
                if (Model?.getAllCustomers!.Data!.Count() == 0)
                {
                    <p> No record found</p>
                    return;
                }
            }
            <table class="table" id="customerTable">
                <thead>
                    <tr>
                        <th scope="col">Name</th>
                        <th scope="col">Birth Date</th>
                        <th scope="col">Email</th>
                        <th scope="col">Contact Number</th>
                        <th scope="col">Gender</th>
                        <th scope="col">Caste</th>
                        <th scope="col">Relegion</th>
                        <th scope="col">Marital</th>
                        <th scope="col">Action</th>

                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.getAllCustomers!.Data!)
                    {
                        <tr>
                            <td>@item.Name</td>
                            <td>@item.BirthDate</td>
                            <td>@item.Email</td>
                            <td>@item.ContactNumber</td>
                            <td>@item.Gender</td>
                            <td>@item.CasteGotra</td>
                            <td>@item.RelegionCommunitity</td>
                            <td>@item.MaritalStatus</td>
                            <td>
                                <a class="edit btnedit" id="edit_@item.Id">Edit</a> |
                                @Html.ActionLink("Delete", "DeleteCustomer", new { id = item.Id }, new { @class = "btnedit", onclick = "return confirmDelete();" })
                            </td>
                        </tr>

                    }


                </tbody>
            </table>

            @if (Model.getAllCustomers.pagination.TotalPages > 1)
            {
                <nav aria-label="Page navigation">
                    <ul class="pagination">
                        @if (Model.getAllCustomers.pagination.HasPreviousPage)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("GetCustomer", new { page = Model.getAllCustomers.pagination.PageIndex - 1, pageSize = Model.getAllCustomers.pagination.PageSize })" aria-label="Previous">
                                    <span aria-hidden="true">&laquo;</span>
                                </a>
                            </li>
                        }

                        @for (int i = 1; i <= Model.getAllCustomers.pagination.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.getAllCustomers.pagination.PageIndex ? "active" : "")">
                                <a class="page-link" href="@Url.Action("GetCustomer", new { page = i, pageSize = Model.getAllCustomers.pagination.PageSize })">@i</a>
                            </li>
                        }

                        @if (Model.getAllCustomers.pagination.HasNextPage)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("GetCustomer", new { page = Model.getAllCustomers.pagination.PageIndex + 1, pageSize = Model.getAllCustomers.pagination.PageSize })" aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            }
        </div>
    </div>


    <!-- Add Modal -->
    <div>
        <div class="modal fade" id="addModal" tabindex="-1" aria-labelledby="addModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-xl">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addModalLabel"> Add Customer</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        @await Html.PartialAsync("_addCustomer", Model);
                    </div>

                </div>
            </div>
        </div>
    </div>
    <div>
        <div class="modal fade" id="editCustomer" tabindex="-1" aria-labelledby="editCustomerLabel" aria-hidden="true">
            <div class="modal-dialog modal-xl">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editCustomerLabel">Edit Customer</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body" id="editCustomerContent">
                        @await Html.PartialAsync("_editCustomer", Model);
                    </div>

                </div>
            </div>
        </div>
    </div>
}

